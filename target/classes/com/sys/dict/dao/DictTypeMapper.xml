<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sys.dict.dao.DictTypeMapper">

    <select id="selectByPrimaryKey" resultType="com.sys.dict.entity.DictTypeEntity" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, p_code, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
        is_del
        from t_d_dict_type
        where id = #{id}
    </select>
    <select id="selectAll" resultType="com.sys.dict.entity.DictTypeEntity">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, p_code, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
        is_del
        from t_d_dict_type
    </select>
    <select id="selectByCode" resultType="com.sys.dict.entity.DictTypeEntity">
        select id , p_code as pCode, code, name, pinyin, short_pinyin as shortPinyin,
        level, sort_no as sortNo, flag, group_code as groupCode,
        is_del as isDel
        from t_d_dict_type
        where group_code = #{group_code}
        and code = #{code}
        and is_del = 0
        order by sort_no,code
    </select>
    <select id="selectByGroup" resultType="com.sys.dict.entity.DictTypeEntity">
         select id , p_code as pCode, code, name, pinyin, short_pinyin as shortPinyin,
        lv as lev, sort_no as sortNo, flag, group_code as groupCode,
        is_del as isDel
        from t_d_dict_type
        where group_code = #{group_code}
        and is_del = 0
        order by sort_no,code
    </select>
    <select id="selectListBySQL" statementType="STATEMENT" resultType="java.util.Map">
        ${sql}
    </select>

    <select id="selectOneBySQL" statementType="STATEMENT" resultType="java.util.Map">
        ${sql}
    </select>
<!--
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        &lt;!&ndash;
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        &ndash;&gt;
        delete from t_d_dict_type
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.eshop.system.dict.entity.DictTypeEntity">
        &lt;!&ndash;
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        &ndash;&gt;
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
            select replace(uuid(),'-','')
        </selectKey>
        insert into t_d_dict_type (id, p_code, code, name,
        pinyin, short_pinyin, level,
        sort_no, flag, group_code,
        is_del)
        values (#{id,jdbcType=CHAR}, #{pCode,jdbcType=CHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{pinyin,jdbcType=VARCHAR}, #{shortPinyin,jdbcType=VARCHAR}, #{level,jdbcType=SMALLINT},
        #{sortNo,jdbcType=SMALLINT}, #{flag,jdbcType=VARCHAR}, #{groupCode,jdbcType=VARCHAR},
        #{isDel,jdbcType=TINYINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.eshop.system.dict.entity.DictTypeEntity">
        &lt;!&ndash;
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        &ndash;&gt;
        update t_d_dict_type
        set p_code = #{pCode,jdbcType=CHAR},
        code = #{code,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        pinyin = #{pinyin,jdbcType=VARCHAR},
        short_pinyin = #{shortPinyin,jdbcType=VARCHAR},
        level = #{level,jdbcType=SMALLINT},
        sort_no = #{sortNo,jdbcType=SMALLINT},
        flag = #{flag,jdbcType=VARCHAR},
        group_code = #{groupCode,jdbcType=VARCHAR},
        is_del = #{isDel,jdbcType=TINYINT}
        where id = #{id,jdbcType=CHAR}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        &lt;!&ndash;
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        &ndash;&gt;
        select id, p_code, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
        is_del
        from t_d_dict_type
        where id = #{id,jdbcType=CHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        &lt;!&ndash;
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        &ndash;&gt;
        select id, p_code, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
        is_del
        from t_d_dict_type
    </select>

    <select id="selectByCode" resultMap="BaseResultMap">
        select id, p_code, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
        is_del
        from t_d_dict_type
        where group_code = #{group_code}
          and code = #{code}
          and is_del = 0
        order by sort_no,code
    </select>

    <select id="selectByGroup" resultMap="BaseResultMap">
    select id, p_id, code, name, pinyin, short_pinyin, level, sort_no, flag, group_code,
    is_del
    from t_d_dict_type
    where group_code = #{group_code}
      and is_del = 0
    order by sort_no,code
  </select>

    <select id="selectListBySQL" statementType="STATEMENT" resultType="java.util.Map">
        ${sql}
    </select>

    <select id="selectOneBySQL" statementType="STATEMENT" resultType="java.util.Map">
        ${sql}
    </select>-->
</mapper>