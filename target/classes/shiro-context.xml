<?xml version="1.0" encoding="utf-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

    <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>


    <!--
      使用Shiro自带的JdbcRealm类
      指定密码匹配所需要用到的加密对象
      指定存储用户、角色、权限许可的数据源及相关查询语句
     -->
    <bean id="defaultRealm" class="com.sys.shrio.DefaultRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
        <property name="authorizationService" ref="authorizationService"></property>
    </bean>

    <!-- <bean id="ssoRealm" class="com.eshop.frame.sso.SSORealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
        <property name="localRealm" ref="defaultRealm"></property>
    </bean> -->

    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="defaultRealm"></property>
        <!--<property name="sessionManager" ref="sessionManager"></property>-->
        <!--<property name="cacheManager" ref="cacheManager"></property>-->
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 超时时间 -->
        <property name="globalSessionTimeout" value="3600000"/>
        <!--<property name="sessionDAO" ref="shiroSessionDao"/>-->
        <!--<property name="sessionIdCookie" ref="sharesession"/>-->
        <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
        <!-- 定时检查失效的session -->
    </bean>

    <!--
       Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行
       Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"></property>
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/anju365.html"></property>
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
        <!--<property name="successUrl" value="/" ></property> -->
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <property name="unauthorizedUrl" value="/unauthorized.html"></property>
        <property name="filters">
            <map>
                <entry key="authc">
                    <!--<bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>-->
                    <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>
                </entry>
                <entry key="anyRoles">
                    <bean class="com.sys.shrio.RolesAuthorizationFilter"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="authorizationService" class="com.eshop.frame.authz.service.DefaultPropertiesAuthzService"/>

    <bean id="filterChainService"
          class="com.eshop.frame.shiro.DynamicFilterChainService">
        <property name="authorizationService" ref="authorizationService"/>
        <property name="shiroFilter" ref="shiroFilter"/>
        <property name="definitions">
            <value>
            /user/**.svc=anon
              /frontJS/**=anon
                /frontStyle/**=anon
                /frontView/anju365/**=anon
                /frontJS/**.json=anon
                /views/front/**.html=anon
                /html/**=anon
                /images/qa/**.png=anon
                /views/visit/answerDetail.html=anon
                /views/visit/map.html=anon
                /login.html=anon
                /unauthorized.html=anon
                /login/**.svc=anon
                /js/**=anon
                /css/**=anon
                /themes/**=anon
                /tempPhoto/**=anon
                /images/**=anon
                /style/**=anon
                /randCodeImage=anon
                /logout.do = anon
				/frontView/saler/**/**.html=anon
				/**=authc
                /houseVerifi/**.svc=anon
                /authority/**.svc=anon
                /gpfy/**.svc=anon
        
            </value>
        </property>
    </bean>
</beans>